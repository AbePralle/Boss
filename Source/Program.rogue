module Boss

class Program [singleton]
  DEFINITIONS
    EXE_CONTINUE  = 0
    EXE_EXCEPTION = 1
    EXE_RETURN    = 2

  GLOBAL PROPERTIES
    execution_status : Int32
    result_Int32     : Int32
    result_Real64    : Real64
    result_String    : String

  PROPERTIES
    t     : Token
    types = StringTable<<Type>>()

    is_configured  = false

    type_Logical   : Type
    type_Byte      : Type
    type_Character : Type
    type_Int32     : Type
    type_Real32    : Type
    type_Real64    : Type
    type_String    : Type

    global_statements : Statements

    int32_stack    = Int32[]
    real64_stack   = Real64[]
    string_stack   = String[]

  METHODS
    method configure( reference_t:Token )
      if (is_configured) return # already configured
      t = reference_t

      type_Logical   = TypeLogical(t)
      type_Byte      = TypeByte(t)
      type_Character = TypeCharacter(t)
      type_Int32     = TypeInt32(t)
      type_Real32    = TypeReal32(t)
      type_Real64    = TypeReal64(t)
      type_String    = TypeString(t)

      global_statements = Statements(t)

    method launch
      resolve
      local statements = global_statements
      global_statements = Statements(t)
      statements.execute
      _ensure_stack_empty

    method organize( ast:Cmd )
      Organizer().visit( ast )

    method resolve
      local resolver = Resolver()
      resolver.visit( global_statements )

    method _ensure_stack_empty
      require int32_stack.is_empty
      require real64_stack.is_empty
      require string_stack.is_empty
endClass

