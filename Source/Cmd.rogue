# Generated and updated by Froley. Custom changes will not be overwritten; customize as desired.
module Boss

class Cmd( t:Token )
  METHODS
    method add( cmd:Cmd )
      throw UnsupportedOperationError()

    method clear
      throw UnsupportedOperationError()

    method count->Int32
      return 0

    method description->String
      return "Cmd"

    method dispatch<<$VisitorType>>( visitor:$VisitorType ) [propagated]
      visitor.visit( this )

    method dispatch<<$VisitorType,$ReturnType>>( visitor:$VisitorType )->$ReturnType [propagated]
      return visitor.on( this )

    method dispatch_on_enter<<$VisitorType>>( visitor:$VisitorType ) [propagated]
      visitor.on_enter( this )

    method dispatch_on_visit<<$VisitorType>>( visitor:$VisitorType ) [propagated]
      visitor.on_visit( this )

    method dispatch_on_visit_children<<$VisitorType>>( visitor:$VisitorType ) [propagated]
      visitor.on_visit_children( this )

    method dispatch_on_leave<<$VisitorType>>( visitor:$VisitorType ) [propagated]
      visitor.on_leave( this )

    method first->Cmd
      throw UnsupportedOperationError()

    method get( index:Int32 )->Cmd
      throw UnsupportedOperationError()

    method get<<$AsType>>( index:Int32 )->$AsType
      return get(index) as $AsType

    method insert( element:Cmd, before_index=0:Int32 )
      throw UnsupportedOperationError()

    method last->Cmd
      throw UnsupportedOperationError()

    method list->Cmd[]
      throw UnsupportedOperationError()

    method remove_first->Cmd
      throw UnsupportedOperationError()

    method remove_last->Cmd
      throw UnsupportedOperationError()

    method set( index:Int32, value:Cmd )
      throw UnsupportedOperationError()

    method to->Character
      return Character(this->Int32)

    method to->Int32
      return 0

    method to->Logical
      return (this->Int32)?

    method to->Real64
      return this->Int32

    method to->String
      return description
endClass

class CmdList : Cmd
  PROPERTIES
    list = Cmd[]

  METHODS
    method init( t )
      noAction

    method init( t, element:Cmd )
      list.add( element )

    method init( t, element1:Cmd, element2:Cmd )
      list.add( element1 )
      list.add( element2 )

    method add( cmd:Cmd )
      @list.add( cmd )

    method clear
      @list.clear

    method count->Int32
      return @list.count

    method description->String
      return "CmdList" + list_description

    method first->Cmd
      return @list.first

    method get( index:Int32 )->Cmd
      return @list[index]

    method insert( element:Cmd, before_index=0:Int32 )
      list.insert( element, before_index )

    method last->Cmd
      return @list.last

    method list->Cmd[]
      return @list

    method list_description->String
      use builder = StringBuilder.pool
        builder.print '['
        forEach (element at index in @list)
          if (index > 0) builder.print ','
          builder.print( %element )
        endForEach
        builder.print ']'
        return builder->String
      endUse

    method remove_first->Cmd
      return @list.remove_first

    method remove_last->Cmd
      return @list.remove_last

    method set( index:Int32, value:Cmd )
      @list[index] = value
endClass

class Unary( t, operand:Cmd ) : Cmd
  METHODS
    method description->String
      return "Unary($)"(%operand)
endClass

class Binary( t, left:Cmd, right:Cmd ) : Cmd
  METHODS
    method description->String
      return "Binary($,$)"(%left,%right)
endClass

class Args : CmdList
  METHODS
    method description->String
      return "Args" + list_description
endClass

class Print : Cmd
  PROPERTIES
    args : Cmd

  METHODS
    method init( t, args )

    method description->String
      return "Print($)" (%args)

endClass

class Statements : CmdList
  METHODS
    method description->String
      return "Statements" + list_description
endClass

class Literal : Cmd
  METHODS
    method description->String
      return "Literal"
endClass

class LiteralString : Literal
  PROPERTIES
    value : String

  METHODS
    method init( t, value )

    method description->String
      return "LiteralString($)" (%value)

    method to->Character
      if (value is null or value.count == 0) return Character(0)
      return value[0]

    method to->Int32:  return value
    method to->Logical: return value?
    method to->String: return value

endClass

class AST : Cmd
  PROPERTIES
    elements : Cmd

  METHODS
    method init( t, elements )

    method description->String
      return "AST($)" (%elements)

endClass

class Println : Cmd
  PROPERTIES
    args : Cmd

  METHODS
    method init( t, args )

    method description->String
      return "Println($)" (%args)

endClass

class LiteralInt32 : Cmd
  PROPERTIES
    value : Int32

  METHODS
    method init( t, value )

    method description->String
      return "LiteralInt32($)" (%value)

    method to->Int32:     return value
    method to->String:    return value

endClass

class LiteralLogical : Cmd
  PROPERTIES
    value : Logical

  METHODS
    method init( t, value )

    method description->String
      return "LiteralLogical($)" (%value)

    method to->Int32:   return which{value:1 || 0}
    method to->Logical: return value
    method to->String:  return which{value:"true" || "false"}

endClass


class LiteralReal64 : Cmd
  PROPERTIES
    value : Real64

  METHODS
    method init( t, value )

    method description->String
      return "LiteralReal64($)" (%value)

    method to->Int32:  return value
    method to->Real64: return value
    method to->String: return value

endClass

class LiteralPi : Cmd
  METHODS
    method description->String
      return "LiteralPi"

    method to->Int32:  return 3
    method to->Real64: return pi
    method to->String: return pi->String
endClass


class LiteralCharacter : Cmd
  PROPERTIES
    value : Character

  METHODS
    method init( t, value )

    method description->String
      return "LiteralCharacter($)" (%value)

    method to->Character: return value
    method to->Int32:     return value
    method to->String:    return value

endClass

class StackPopInt32 : Unary
  METHODS
    method description->String
      return "StackPopInt32($)" (%operand)

endClass

class StackPopObject : Unary
  METHODS
    method description->String
      return "StackPopObject($)" (%operand)

endClass

class StackPopReal64 : Unary
  METHODS
    method description->String
      return "StackPopReal64($)" (%operand)

endClass

class StackPopString : Unary
  METHODS
    method description->String
      return "StackPopString($)" (%operand)

endClass

class Add : Binary
  METHODS
    method description->String
      return "Add($,$)" (%left,%right)

endClass

class Subtract : Binary
  METHODS
    method description->String
      return "Subtract($,$)" (%left,%right)

endClass

class Description : Unary
  METHODS
    method description->String
      return "Description($)" (%operand)

endClass

class DescriptionInt32 : Unary
  METHODS
    method description->String
      return "DescriptionInt32($)" (%operand)

endClass

class DescriptionObject : Unary
  METHODS
    method description->String
      return "DescriptionObject($)" (%operand)

endClass

class DescriptionReal64 : Unary
  METHODS
    method description->String
      return "DescriptionReal64($)" (%operand)

endClass

class DescriptionLogical : Unary
  METHODS
    method description->String
      return "DescriptionLogical($)" (%operand)

endClass

class AddInt32 : Binary
  METHODS
    method description->String
      return "AddInt32($,$)" (%left,%right)

endClass

class AddObject : Binary
  METHODS
    method description->String
      return "AddObject($,$)" (%left,%right)

endClass

class AddReal64 : Binary
  METHODS
    method description->String
      return "AddReal64($,$)" (%left,%right)

endClass

class AddString : Binary
  METHODS
    method description->String
      return "AddString($,$)" (%left,%right)

endClass

class CastToCharacter : Unary
  METHODS
    method description->String
      return "CastToCharacter($)" (%operand)

endClass

class CastToInt32 : Unary
  METHODS
    method description->String
      return "CastToInt32($)" (%operand)

endClass

class CastToLogical : Unary
  METHODS
    method description->String
      return "CastToLogical($)" (%operand)

endClass

class CastToObject( t, operand, to_type:Type ) : Unary
  METHODS
    method init( t, operand )
      # This constructor is just to satisfy the Froley compiler
      throw UnsupportedOperationError()

    method description->String
      return "CastToObject($,$)" (%operand,%to_type)

endClass

class CastToReal32 : Unary
  METHODS
    method description->String
      return "CastToReal32($)" (%operand)

endClass

class CastToReal64 : Unary
  METHODS
    method description->String
      return "CastToReal64($)" (%operand)

endClass

class CastToString : Unary
  METHODS
    method description->String
      return "CastToString($)" (%operand)

endClass

class CastToByte : Unary
  METHODS
    method description->String
      return "CastToByte($)" (%operand)

endClass
