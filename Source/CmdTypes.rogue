module Boss

augment Cmd
  GLOBAL METHODS
    method common_type( a:Type, b:Type )->Type
      if (a is b) return a
      if (not a or not b) return null
      if (a.is_primitive and b.is_primitive)
        local type = Program.type_String
        if (a is type or b is type) return type
        type = Program.type_Real64
        if (a is type or b is type) return type
        type = Program.type_Real32
        if (a is type or b is type) return type
        return Program.type_Int32  # any mismatched pair Byte/Character/Int32 -> Int32
      else
        return Program.type_String # Placeholder/TODO
      endIf

  METHODS
    method create_call( context:Cmd, args:Cmd )->Cmd
      throw t.error( "[INTERNAL] $.create_call() is undefined."(type_name) )

    method organize_element
      throw t.error( "[INTERNAL] $.organize_element() is undefined." (type_name) )

    method require_type->Type
      local result = type
      if (result) return result
      throw t.error( "Value expected." )

    method require_value->Cmd
      require_type
      return this

    method type->Type
      return null
endAugment

augment Unary
  METHODS
    method type->Type
      return operand.type
endAugment

augment Binary
  METHODS
    method type->Type
      return common_type( left.type, right.type )
endAugment

augment CallRoutine
  METHODS
    method type->Type
      return r.return_type
endAugment

augment DefineModule
  METHODS
    method organize_element
      Program.set_current_module( t, name )
endAugment

augment DescriptionInt32
  METHODS
    method type->Type
      return Program.type_String
endAugment

augment DescriptionLogical
  METHODS
    method type->Type
      return Program.type_String
endAugment

augment DescriptionObject
  METHODS
    method type->Type
      return Program.type_String
endAugment

augment DescriptionReal64
  METHODS
    method type->Type
      return Program.type_String
endAugment

augment LiteralString
  METHODS
    method type->Type
      return Program.type_String
endAugment

augment LiteralLogical
  METHODS
    method type->Type
      return Program.type_Logical
endAugment

augment LiteralByte
  METHODS
    method type->Type
      return Program.type_Byte
endAugment

augment LiteralCharacter
  METHODS
    method type->Type
      return Program.type_Character
endAugment

augment LiteralInt32
  METHODS
    method type->Type
      return Program.type_Int32
endAugment

augment LiteralReal32
  METHODS
    method type->Type
      return Program.type_Real32
endAugment

augment LiteralReal64
  METHODS
    method type->Type
      return Program.type_Real64
endAugment

augment LiteralPi
  METHODS
    method type->Type
      return Program.type_Real64
endAugment

augment Procedure
endAugment

augment Routine
  METHODS
    method create_call( context:Cmd, args:Cmd )->Cmd
      return CallRoutine( t, this, args )

    method organize_element
      Program.current_module.routines.add( this )
endAugment

augment Statements
  METHODS
    method organize_element
      Program.current_module.global_statements.add( this )
endAugment

